var http = require('http');
var qs = require('querystring');
var url = require('url');

// The port to listen for incoming HTTP requests on
var LISTEN_PORT = 1337;

function processRequest(httpPostData, successCallback, errorCallback) {
    var Tproxy = require('temboo/core/tembooproxy');
    var Tsession = require('temboo/core/temboosession');
    var Twilio = require('temboo/Library/Twilio/SMSMessages');

    // Initialize Temboo session
    var session = new Tsession.TembooSession('feldi', 'myFirstApp', '87f41ee62f024a58a14c20e169648652');

    // Initialize our request proxy
    var tembooProxy = new Tproxy.TembooProxy();

    // Instantiate the Choreo
    var sendSMSChoreo = new Twilio.SendSMS(session);

    // Add Choreo proxy with an ID for the JS Library
    tembooProxy.addChoreo('jsSendSMS', sendSMSChoreo);
    
    // Whitelist client inputs
    tembooProxy.allowUserInputs('jsSendSMS', 'AuthToken');
    tembooProxy.allowUserInputs('jsSendSMS', 'Body');
    tembooProxy.allowUserInputs('jsSendSMS', 'To');
    tembooProxy.allowUserInputs('jsSendSMS', 'AccountSID');
    tembooProxy.allowUserInputs('jsSendSMS', 'From');

    // Execute the requested Choreo
    tembooProxy.execute(httpPostData['temboo_proxy'], true, successCallback, errorCallback);
}

// Initialize web server
http.createServer(function(request, response) {
    console.log('server listening on port', LISTEN_PORT);
    // Examine requested URL
    var resource = url.parse(request.url).pathname;

    if(resource == '/proxy-server'){
        var body = '';

        request.on('data', function(data) {
            body += data;
        });
        
        request.on('end', function () {
            // Grab the POST data
            var httpPostData = qs.parse(body);
            
            // Handle JS SDK request
            processRequest(
                httpPostData,
                function(result){
                    console.log('Success! ' + result);
                    response.end(result);
                }, 
                function(err){
                    console.log('Error: ' + err);
                    response.end(err);
                }
            );
        });
           
        // Set content type for JSON response 
        response.writeHeader(200, {"Content-Type": "application/json"});
    }
}).listen(LISTEN_PORT);
